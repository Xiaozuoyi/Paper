---
type AccordionItem = {
  title: string;
  open: boolean;
};

const { title, open } = Astro.props as AccordionItem;
---

<section>
  <div
    class="bg-slate-100 border-2 border-slate-300 border-solid rounded-lg p-4"
  >
    <button class="accordion-toggle w-full flex items-center justify-between">
      <span class="text-lg font-black">{title}</span>
      <div
        class={`i-mdi:chevron-down-circle-outline size-6 ${open ? "hidden" : ""} down`}
      >
      </div>
      <div
        class={`i-mdi:chevron-up-circle-outline size-6 ${open ? "" : "hidden"} up`}
      >
      </div>
    </button>
    <div class={`accordion-content ${open ? "open" : ""}`}>
      <div class="mb-2 mt-5">
        <slot />
      </div>
    </div>
  </div>
</section>

<script>
  // 用于设置手风琴内容最大高度的函数
  function setMaxHeight(content: HTMLElement, isOpen: boolean): void {
    content.style.maxHeight = isOpen ? `${content.scrollHeight}px` : "";
  }

  // 切换手风琴状态的函数
  function toggleAccordion(button: HTMLElement): void {
    const content = button.nextElementSibling as HTMLElement;
    const isContentOpen = content.classList.toggle("open");
    setMaxHeight(content, isContentOpen);

    button.querySelector(".down")!.classList.toggle("hidden", isContentOpen);
    button.querySelector(".up")!.classList.toggle("hidden", !isContentOpen);
  }

  // 初始化手风琴切换
  const accordionToggles = document.querySelectorAll(".accordion-toggle");
  accordionToggles.forEach((button) => {
    // 为每个手风琴设置初始状态
    const content = button.nextElementSibling as HTMLElement;
    const isContentInitiallyOpen = content.classList.contains("open");
    setMaxHeight(content, isContentInitiallyOpen);

    // 设置图标的初始可见度
    button
      .querySelector(".down")!
      .classList.toggle("hidden", isContentInitiallyOpen);
    button
      .querySelector(".up")!
      .classList.toggle("hidden", !isContentInitiallyOpen);

    // 附加点击事件监听器，以便在点击时切换手风琴
    button.addEventListener("click", () =>
      toggleAccordion(button as HTMLElement),
    );
  });
</script>

<style>
  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }
  .accordion-toggle {
    cursor: pointer;
  }
</style>
