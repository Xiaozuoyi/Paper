---
import Post from "~/components/Post.astro";
import LayoutDefault from "~/layouts/LayoutDefault.astro";
import { getPosts } from "~/utils";
import type { GetStaticPaths } from "astro";
import Pagination from "~/components/Pagination.astro";

export const getStaticPaths = (async ({}) => {
  const posts = await getPosts();
  return posts.map((post, idx) => {
    const prev = posts[idx - 1];
    const next = posts[idx + 1];
    return {
      params: { slug: post.slug },
      props: { entry: post, next, prev },
    };
  });
}) satisfies GetStaticPaths;

// type Params = InferGetStaticParamsType<typeof getStaticPaths>

const { entry, prev, next } = Astro.props;
const { Content } = await entry.render();
const { translate: t } = Astro.locals;
---

<LayoutDefault
  title={entry.data.title}
  desc={entry.data.description}
  banner={entry.data.banner}
>
  <Post post={entry}>
    <Content />
  </Post>
  <Pagination
    showLeft={Boolean(prev)}
    leftTitle={`${t("prev_post")}: ${prev?.data.title}`}
    leftUrl={`/posts/${prev?.slug}/`}
    showRight={Boolean(next)}
    rightTitle={`${t("next_post")}: ${next?.data.title}`}
    rightUrl={`/posts/${next?.slug}/`}
    showPageCount={false}
  />
</LayoutDefault>

<script>
  import "@github/clipboard-copy-element";
  interface ClipboardCopyElement extends HTMLElement {
    value: string;
  }
  document.addEventListener("clipboard-copy", function (event) {
    const target = event.target as HTMLElement;
    const icon = target.querySelector(".icon") as HTMLElement;
    icon.classList.replace("i-mdi-content-copy", "i-mdi-check");
    setTimeout(() => {
      icon.classList.replace("i-mdi-check", "i-mdi-content-copy");
    }, 1500);
  });

  const codeBlocks = Array.from(document.querySelectorAll("pre"));
  const icon = "<div class='i-mdi-content-copy text-white icon w-5 h-5'></div>";
  for (let codeBlock of codeBlocks) {
    let wrapper = document.createElement("div");
    wrapper.className = "code-container";

    let copyButton = document.createElement(
      "clipboard-copy",
    ) as ClipboardCopyElement;
    let code = codeBlock.querySelector("code");
    copyButton.value = code?.innerText ?? "";
    copyButton.className = "clipboard-copy";
    copyButton.innerHTML = icon;

    codeBlock.appendChild(copyButton);

    codeBlock.parentNode?.insertBefore(wrapper, codeBlock);
    wrapper.appendChild(codeBlock);
  }
</script>

<style is:global>
  .code-container {
    position: relative;
  }
  .clipboard-copy {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    width: 1.75rem;
    height: 1.75rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 0.25rem;
    display: none;
  }
  .code-container:hover .clipboard-copy {
    display: block;
  }

  .clipboard-copy:hover {
    background-color: #30363d;
  }
</style>
